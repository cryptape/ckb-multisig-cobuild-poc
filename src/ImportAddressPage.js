import { Alert, Button, FileInput } from "flowbite-react";
import { useState } from "react";
import { importMultisigAddresses } from "./lib/multisig-address.js";

const ERROR_MESSAGE = "Opps, error occurs when processing the uploaded file";

export default function NewAddressPage({ addAddress, navigate }) {
  const [state, setState] = useState({
    isProcessing: false,
    error: null,
  });

  const submit = (e) => {
    e.preventDefault();
    setState({ isProcessing: true, error: null });

    try {
      const reader = new FileReader();

      reader.addEventListener("load", (loaded) => {
        try {
          const addresses = importMultisigAddresses(
            JSON.parse(loaded.target.result),
          );
          addAddress(addresses);
          navigate("#/");
        } catch (error) {
          setState({
            isProcessing: false,
            error: `${ERROR_MESSAGE}: ${error}`,
          });
        }
      });
      reader.addEventListener("error", () => {
        setState({ isProcessing: false, error: ERROR_MESSAGE });
      });
      reader.addEventListener("abort", () => {
        setState({ isProcessing: false, error: "Uploading aborted" });
      });

      const fileInput = document.getElementById("file-upload");
      reader.readAsText(fileInput.files[0]);
    } catch (error) {
      setState({
        isProcessing: false,
        error: `${ERROR_MESSAGE}: ${error}`,
      });
    }
  };

  return (
    <form onSubmit={submit} className="flex flex-col gap-4">
      <h2 className="text-lg mb-4">Import Multisig Addresses</h2>
      {state.error ? (
        <Alert className="mb-4" color="failure">
          {state.error}
        </Alert>
      ) : null}

      <div>
        <p className="mb-0">Supported formats:</p>
        <ul className="mb-4 list-disc list-inside">
          <li>
            The JSON file generated by <code>ckb-cli tx init</code>
          </li>
          <li>
            The JSON file exported from Neuron via the Multisig Address Tool in
            the Tools menu.
          </li>
        </ul>
        <FileInput id="file-upload" name="file-upload" required />
      </div>

      <Button
        isProcessing={state.isProcessing}
        disabled={state.isProcessing}
        type="submit"
      >
        Upload
      </Button>
    </form>
  );
}
