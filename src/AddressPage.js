import DeleteButton from "./components/DeleteButton.js";
import { Button } from "flowbite-react";
import { generateMultisigAddress } from "./lib/ckb-address.js";

export function CkbCliUsage({ address, ...props }) {
  const code = [
    "ckb-cli tx add-multisig-config --tx-file tx.json",
    `--require-first-n ${address.required} --threshold ${address.threshold}`,
    ...address.signers.map((signer) => `--sighash-address ${signer}`),
  ].join(" \\\n  ");

  return (
    <div {...props}>
      <h2 className="text-lg mb-4">
        Use In <code>ckb-cli</code>
      </h2>
      <pre className="font-mono bg-slate-100 rounded p-4 overflow-auto">
        {code}
      </pre>
      <aside className="text-sm mb-4">
        <code>tx.json</code> is the file generated by{" "}
        <code>ckb-cli tx init</code>
      </aside>
    </div>
  );
}

export function NeuronUsage({ address, ...props }) {
  const neuronConfig = {
    multisig_configs: {
      [address.args]: {
        sighash_addresses: address.signers,
        require_first_n: address.required,
        threshold: address.threshold,
      },
    },
  };
  const fileName = `multisig-config-${address.args}.json`;
  const file = new Blob([JSON.stringify(neuronConfig)], { type: "text/plain" });

  return (
    <div {...props}>
      <h2 className="text-lg mb-4">
        Use In <i>Neuron</i>
      </h2>
      <p className="mb-4">
        Download the file and import it into Neuron Multisig Addresses Tool (In
        Menu: Tools / Multisig Addresses)
      </p>
      <p>
        <Button
          className="inline-block"
          as="a"
          download={fileName}
          target="_blank"
          rel="noreferrer"
          href={URL.createObjectURL(file)}
        >
          Download
        </Button>
      </p>
    </div>
  );
}

export default function AddressPage({ address, deleteAddress, navigate }) {
  return (
    <>
      <section className="mb-8">
        <h2 className="text-lg mb-4">
          Multisig <code className="break-all">{address.args}</code>
        </h2>

        <dl className="mb-4">
          <dt>Testnet Address</dt>
          <dd className="mb-4">
            <code className="break-all">
              {generateMultisigAddress(address, "ckt")}
            </code>
          </dd>

          <dt>Mainnet Address</dt>
          <dd className="mb-4">
            <code className="break-all">
              {generateMultisigAddress(address, "ckb")}
            </code>
          </dd>
        </dl>

        <p className="mb-4">
          Requiring {address.threshold}{" "}
          {address.threshold === 1 ? "signature" : "signatures"} from{" "}
          {address.signers.length}{" "}
          {address.signers.length === 1 ? "signer" : "signers"}:
        </p>

        <ol className="mb-4 list-decimal list-outside ml-4">
          {address.signers.map((signer, i) => (
            <li key={`signer-${i}`} className="leading-6 break-all">
              <code>{signer}</code>
            </li>
          ))}
        </ol>

        {address.required > 0 ? (
          <p className="mb-4">
            Signatures from the first {address.required}{" "}
            {address.required === 1 ? "signer" : "signers"} are required.
          </p>
        ) : null}

        <div className="mb-4 flex flex-row gap-2 flex-wrap">
          <Button as="a" href={`#/addresses/duplicate/${address.args}`}>
            Duplicate
          </Button>
          <DeleteButton
            onClick={() => {
              deleteAddress(address.args);
              navigate("#/");
            }}
          />
          <Button outline color="light" as="a" href="#/">
            Go Back
          </Button>
        </div>
      </section>
      <CkbCliUsage className="mb-4" address={address} />
      <NeuronUsage className="mb-4" address={address} />
    </>
  );
}
